using System.Text;

namespace StellaQL
{
    public abstract class Reference
    {
        public static void ToContents(StringBuilder contents)
        {
            contents.AppendLine(@"StellaQL Command Reference");
            contents.AppendLine(@"");
            contents.AppendLine(@"(1) Practice");
            contents.AppendLine(@"");
            contents.AppendLine(@"    Please, Buckup your program.");
            contents.AppendLine(@"");
            contents.AppendLine(@"    [Window] - [State Machine Command Line (StellaQL)] is here.");
            contents.AppendLine(@"");
            contents.AppendLine(@"    Please, open ""Assets/Scripts/StellaQL/Anicon@StellaQL"".");
            contents.AppendLine(@"");
            contents.AppendLine(@"    And condition check (Option).");
            contents.AppendLine(@"");
            contents.AppendLine(@"        [Window] - [Editor Tests Runner] ... [StellaQL] - [StellaQLTest].");
            contents.AppendLine(@"        And [Run All]. Please, click is all greens.");
            contents.AppendLine(@"");
            contents.AppendLine(@"(2) Comment");
            contents.AppendLine(@"");
            contents.AppendLine(@"    Line comment only.");
            contents.AppendLine(@"");
            contents.AppendLine(@"    # This is a comment.");
            contents.AppendLine(@"");
            contents.AppendLine(@"    FROM # (!)This is not a comment.");
            contents.AppendLine(@"");
            contents.AppendLine(@"    # (!)Unfortunately, Multi line comment is nothing.");
            contents.AppendLine(@"    FROM TAG ( Tail /*Horn*/ Wing )");
            contents.AppendLine(@"");
            contents.AppendLine(@"(2) Basic format");
            contents.AppendLine(@"");
            contents.AppendLine(@"    # (!)Unfortunately, upper case, lower case is sensitive.");
            contents.AppendLine(@"");
            contents.AppendLine(@"    -----------------");
            contents.AppendLine(@"");
            contents.AppendLine(@"    STATE INSERT");
            contents.AppendLine(@"    SET name0 ""WhiteCat"" name1 ""WhiteDog""");
            contents.AppendLine(@"    WHERE ""Base Layer""");
            contents.AppendLine(@"");
            contents.AppendLine(@"    # - SET phrase name0,name1... is ignore. INSERT statement use property-value only.");
            contents.AppendLine(@"    # - WHERE is Statemachine path.");
            contents.AppendLine(@"");
            contents.AppendLine(@"    -----------------");
            contents.AppendLine(@"");
            contents.AppendLine(@"    STATE UPDATE");
            contents.AppendLine(@"    SET speed 1.23 speedParameterActive true");
            contents.AppendLine(@"         speedParameter 4.5");
            contents.AppendLine(@"    WHERE ""Base Layer\.Cat""");
            contents.AppendLine(@"");
            contents.AppendLine(@"    -----------------");
            contents.AppendLine(@"");
            contents.AppendLine(@"    STATE DELETE");
            contents.AppendLine(@"    SET name0 ""WhiteCat"" name1 ""WhiteDog""");
            contents.AppendLine(@"    WHERE ""Base Layer""");
            contents.AppendLine(@"");
            contents.AppendLine(@"    # - SET phrase name0,name1... is ignore. INSERT statement use property-value only.");
            contents.AppendLine(@"    # - WHERE is Statemachine path.");
            contents.AppendLine(@"");
            contents.AppendLine(@"    -----------------");
            contents.AppendLine(@"");
            contents.AppendLine(@"    STATE SELECT");
            contents.AppendLine(@"    WHERE "".*Cat""");
            contents.AppendLine(@"");
            contents.AppendLine(@"    # CSV file write.");
            contents.AppendLine(@"");
            contents.AppendLine(@"    -----------------");
            contents.AppendLine(@"");
            contents.AppendLine(@"    TRANSITION INSERT");
            contents.AppendLine(@"    FROM ""Base Layer\.Cat""");
            contents.AppendLine(@"    TO   ""Base Layer\.Dog""");
            contents.AppendLine(@"");
            contents.AppendLine(@"    TRANSITION ANYSTATE INSERT");
            contents.AppendLine(@"    FROM ""Base Layer""");
            contents.AppendLine(@"    TO ""Base Layer\.Foo""");
            contents.AppendLine(@"    # Please, Close window and Open window");
            contents.AppendLine(@"    #         (Re Open) Animation Controller!!");
            contents.AppendLine(@"    # If not paint line.");
            contents.AppendLine(@"");
            contents.AppendLine(@"    TRANSITION ENTRY INSERT");
            contents.AppendLine(@"    FROM ""Base Layer""");
            contents.AppendLine(@"    TO ""Base Layer\.Foo""");
            contents.AppendLine(@"");
            contents.AppendLine(@"    TRANSITION EXIT INSERT");
            contents.AppendLine(@"    FROM ""Base Layer\.Foo""");
            contents.AppendLine(@"");
            contents.AppendLine(@"    -----------------");
            contents.AppendLine(@"");
            contents.AppendLine(@"    TRANSITION UPDATE");
            contents.AppendLine(@"    SET exitTime 1.0 duration 0");
            contents.AppendLine(@"    FROM ""Base Layer\.Cat""");
            contents.AppendLine(@"    TO   ""Base Layer\.Dog""");
            contents.AppendLine(@"");
            contents.AppendLine(@"    -----------------");
            contents.AppendLine(@"");
            contents.AppendLine(@"    TRANSITION DELETE");
            contents.AppendLine(@"    FROM ""Base Layer\.Cat""");
            contents.AppendLine(@"    TO   ""Base Layer\.Dog""");
            contents.AppendLine(@"");
            contents.AppendLine(@"    -----------------");
            contents.AppendLine(@"");
            contents.AppendLine(@"    TRANSITION SELECT");
            contents.AppendLine(@"    FROM "".*""");
            contents.AppendLine(@"    TO   "".*""");
            contents.AppendLine(@"");
            contents.AppendLine(@"    -----------------");
            contents.AppendLine(@"");
            contents.AppendLine(@"(3) FROM or TO phrase");
            contents.AppendLine(@"");
            contents.AppendLine(@"    # Regular Expression.");
            contents.AppendLine(@"    FROM ""Base Layer\.Cat""");
            contents.AppendLine(@"    TO   ""Base Layer\.Dog""");
            contents.AppendLine(@"");
            contents.AppendLine(@"    # Tag (""AND"" operation)");
            contents.AppendLine(@"    FROM TAG ( Alpha Beta )");
            contents.AppendLine(@"    TO TAG ( Cee Dee )");
            contents.AppendLine(@"    # - Space separated.");
            contents.AppendLine(@"    # - ( ) is choice everything words.");
            contents.AppendLine(@"    # - Tag is not unity tag.");
            contents.AppendLine(@"    # - Please, read C# program.");
            contents.AppendLine(@"    #   const string.");
            contents.AppendLine(@"    # - Nest OK.");
            contents.AppendLine(@"    #   ((A B)(C D))");
            contents.AppendLine(@"    #   But,");
            contents.AppendLine(@"    #   ((A B)  C ) is NG.");
            contents.AppendLine(@"    #   ((A B) (C)) is OK.");
            contents.AppendLine(@"");
            contents.AppendLine(@"    # Tag (""OR"" operation)");
            contents.AppendLine(@"    FROM TAG ( Alpha Beta )");
            contents.AppendLine(@"    TO TAG ( Cee Dee )");
            contents.AppendLine(@"    # ( ) is choice anything words.");
            contents.AppendLine(@"");
            contents.AppendLine(@"    # Tag (""NOT"" operation)");
            contents.AppendLine(@"    FROM TAG { Alpha Beta }");
            contents.AppendLine(@"    TO TAG { Cee Dee }");
            contents.AppendLine(@"    # { } is not choice everything words.");
            contents.AppendLine(@"");
            contents.AppendLine(@"    -----------------");
            contents.AppendLine(@"");
            contents.AppendLine(@"(4) SET phrase (STATE case)");
            contents.AppendLine(@"    ");
            contents.AppendLine(@"    SET name ""WhiteCat""");
            contents.AppendLine(@"        tag ""enjoy""");
            contents.AppendLine(@"        speed 1.23");
            contents.AppendLine(@"        speedParameterActive true");
            contents.AppendLine(@"        speedParameter ""Monday""");
            contents.AppendLine(@"        mirror true");
            contents.AppendLine(@"        mirrorParameterActive true");
            contents.AppendLine(@"        mirrorParameter ""Tuesday""");
            contents.AppendLine(@"        cycleOffset 4.56");
            contents.AppendLine(@"        cycleOffsetParameterActive true");
            contents.AppendLine(@"        cycleOffsetParameter ""Wednesday""");
            contents.AppendLine(@"        iKOnFeet true");
            contents.AppendLine(@"        writeDefaultValues false");
            contents.AppendLine(@"");
            contents.AppendLine(@"(5) SET phrase (TRANSITION case)");
            contents.AppendLine(@"    ");
            contents.AppendLine(@"    SET solo true");
            contents.AppendLine(@"        mute true");
            contents.AppendLine(@"        hasExitTime true");
            contents.AppendLine(@"        exitTime 12.3");
            contents.AppendLine(@"        hasFixedDuration false");
            contents.AppendLine(@"        duration 4.56");
            contents.AppendLine(@"        offset 7.89");
            contents.AppendLine(@"        orderedInterruption false");
            contents.AppendLine(@"        tag ""excellent""");
            contents.AppendLine(@"        ");
            contents.AppendLine(@"");
            contents.AppendLine(@"Thank you:-)");
            contents.AppendLine(@"");
            contents.AppendLine(@"            StellaQL");
            contents.AppendLine(@"            (State Machine Command Line)");
            contents.AppendLine(@"");
            contents.AppendLine(@"    Author: TAKAHASHI Satoshi (Handle. Muzudho)");
            contents.AppendLine(@"            (C) 2017");
            contents.AppendLine(@"    From    Japan");
            contents.AppendLine(@"    https://github.com/muzudho/KifuwarabeFighter2");
        }
    }
}
