REM  *****  BASIC  *****

Option Explicit

'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------
'	1	2	3	4	5	6	7	8	9	0	1	2	3	4	5	6	7	8	9	0	1	2	3	4	5	6	7	8	9	0	1	2	3	4	5	6	7	8	9	0
'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------

																																' ループカウンター接頭辞
	' i		... i

																																' オブジェクト略称
	' dc	... document
	' sh	... sheet
	' cm	... column
	' rw	... row
	' ce	... cell
	' vl	... value
	' hed	... header

																																' ドキュメント略称  (シート名短縮系)
	' cnf			... config
	' cdo (coXX)	... conbine def object (_dfObj)
	' cnb (cbXX)	... conbine
	' vdo (voXX)	... view def object (_dfObj)
	' viw (vwXX)	... view
	' reo (roXX)	... update request object (_upObj)
	' req (rqXX)	... update request

																																' シート略称
	' Pm ... parameters
	' Ly ... layers
	' Sm ... statemachines
	' St ... states
	' Tr ... transitions
	' Cd ... conditions
	' Ps ... positions
	' Mo ... motions
	' Ur ... updateReqeust

'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------

Sub Main
																																' シート
	Dim sh_cnf													As	Object
																																' 使わない引数に
	Dim Dummy()
	Dim newFileName												As	String
	
																																' アクティブ・シートを取得
	sh_cnf														=	ThisComponent.GetCurrentController.ActiveSheet

																																' シートフッター1 の行番号
	Dim rw_cnf_sheetfooter1										As	Integer
	Const COLUMN0 												=	0
	rw_cnf_sheetfooter1											=	Utility.RowOf(  "#SheetFooter1#"  ,sh_cnf  ,COLUMN0	_
																											,0	,1000  )
																																' ヘッダー1 の列番号
	Dim cm_cnf_key												As	Integer
	Dim cm_cnf_value											As	Integer
	cm_cnf_key													=	Utility.ColumnOf( "#Key#"			,sh_cnf	,rw_cnf_sheetfooter1	,0	,1000	)
	cm_cnf_value												=	Utility.ColumnOf( "#Value#"			,sh_cnf	,rw_cnf_sheetfooter1	,0	,1000	)

																																' 信頼のおけるフォルダーのパス（ 末尾は \ ）
	Dim folder													As	String
	folder														=	Utility.VLookup(  "folder"	,sh_cnf	,cm_cnf_key	,cm_cnf_value	)

																																' シート名
	Dim	shNames													As	Object
	shNames														=	GetShNames( )
																																' 定数 sh_number で要素サイズを初期化できなかった
	Dim	filePaths( 9 * 6 )										As	String


																																' ファイルパスを読取
	Dim loopCounter												As	Integer
																																' updateRequestシーツの手前まで
	For loopCounter = 0 To sh_number - sh_unit - 1
		filePaths( loopCounter )								=		folder		_
																	&	"_log_("	_
																	&	Utility.VLookup( "COMMON1"	,sh_cnf	,cm_cnf_key	,cm_cnf_value )	_
																	&	")"			_
																	&	shNames(loopCounter)	_
																	&	".csv"
	Next

																																' 出力ファイル名を読取
	newFileName													=	Utility.VLookup( "output_file"	,sh_cnf	,cm_cnf_key	,cm_cnf_value )
	
																																' 新しい文書を新規作成
	Dim dc_cnb													As	Object
	dc_cnb														=	StarDesktop.loadComponentFromURL("private:factory/scalc", "_blank", 0, Dummy())
	
'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------
																																' 最初からあるシートを名前変更
	Dim shName_cbPm												As	String
		shName_cbPm												=	shNames(1)

	Dim sh_cnb													As	Object
	sh_cnb														=	dc_cnb.Sheets(0)
	sh_cnb.Name													=	shName_cbPm
																																' ファイルの読み書き
	ReadCsv( dc_cnb	,filePaths(1)	,sh_cnb	)
	
'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------
																																' ２つ目のシートを作成
	Dim shName_coPm												As	String
		shName_coPm												=	shNames(0)
																																' シートを追加
	' if dc_cnb.getSheets().hasByName(shName_coPm) = false then
	dc_cnb.getSheets().insertNewByName(shName_coPm,1)
	' end if
	sh_cnb 														=	Code.GetSh(	dc_cnb	,shName_coPm	)
																																' CSVファイルを読込んでシートに書き写す
	ReadCsv( dc_cnb, filePaths(0), sh_cnb )
	
'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------
																																' ３つ目以降のシートを作成

																																' シートの名前
	Dim shName													As	String

	Dim index 													As	Integer
																																' updateRequestシーツの手前まで
	For index = sh_unit To sh_number - sh_unit - 1 Step sh_unit
																																' データ・シートのCSVファイルを読込んでシートに書き写す
		shName	 												=	shNames( index + 1 )
		dc_cnb.getSheets().insertNewByName(shName,index)
		sh_cnb 													=	Code.GetSh(	dc_cnb	,shName	)
		ReadCsv( dc_cnb, filePaths( index + 1 ), sh_cnb )

																																' 列定義シートのCSVファイルを読込んでシートに書き写す
		shName	 												=	shNames( index + 0 )
		dc_cnb.getSheets().insertNewByName(shName,index)
		sh_cnb 													=	Code.GetSh(	dc_cnb	,shName	)
		ReadCsv( dc_cnb, filePaths( index ), sh_cnb )
	Next
	
'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------
																																' .odsとして保存
	dc_cnb.storeAsURL(ConvertToUrl( folder & newFileName), Dummy())
																																' ファイルを閉じる
	dc_cnb.dispose
End Sub

'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------
																																' CSVファイルを読込んでシートに書き写す
Sub ReadCsv( dc_xx As Object, filename As String, sh_xx as Object)
																																' 更新要求中間シートをアクティブにする
	dc_xx.getCurrentController().setActiveSheet( sh_xx )

	If Not FileExists( filename ) Then
    	Msgbox( filename & " ファイルがありません。エクスポートしましたか？")
    End If
																																' ファイルハンドル番号
	Dim fileHandle 												As	Integer
	fileHandle = Freefile
																																' 外部ファイルの内容をシートに読込む
	Open filename For Input As fileHandle
	
	Dim rw														As	Integer
	Dim source													As	String
	rw = 0
	Do While not eof(fileHandle)
		Line Input #fileHandle, source
	
		Utility.CsvLineParser( source, rw, sh_xx )
		Code.CountUp( rw, 1 )
	Loop
	
	Close #fileHandle
End Sub
