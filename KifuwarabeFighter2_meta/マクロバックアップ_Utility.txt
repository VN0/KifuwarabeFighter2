REM  *****  BASIC  *****

Option Explicit

'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------
'	1	2	3	4	5	6	7	8	9	0	1	2	3	4	5	6	7	8	9	0	1	2	3	4	5	6	7	8	9	0	1	2	3	4	5	6	7	8	9	0
'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------
																																' CSV解析
Sub CsvLineParser( _
					 source	As String	_
					,rw		As Integer	_
					,sh_xx	As Object	_
				 )
	Dim caret													As	Integer
	Dim cm														As	Integer														' 列
	Dim ce														As	String														' セル

	If Len(source) < 1 Then
		Exit Sub
	End If																														' 空文字列なら終わり

	caret														=	1															' 文字列の文字目は1スタート
	cm															=	0															' テーブルの列は0スタート
	ce															=	""															' １セル分の文字列
	Do While caret-1 < Len(source)																								' このループで１行分に対応
		Select Case Mid(source,caret,1)
			Case ",":																											' トークンを出力して次へ。
				Code.CountUp( caret ,1 )
				Code.SetCe(	sh_xx	,cm	,rw						,	ce	)
				Code.CountUp( cm ,1 )
				ce												=	""
			Case """":
																																' ここからリテラル文字列処理へ
				Code.CountUp( caret ,1 )

																																' エスケープしながら、単独「"」が出てくるまでそのまま出力。
				Do While caret-1 < Len(source)
					If """"=Mid(source,caret,1) Then
																																' これが単独の「"」なら終わり、２連続の「"」ならまだ終わらない。

						If caret + 1 - 1 = Len(source) Then
							Code.CountUp( caret ,1 )
							Exit Do																								' 「"」が最後の文字だったのなら、無視してループ抜け。
						ElseIf _
							"""" = Mid(source,caret+1,1) _
						Then
							Code.CountUp( caret ,2 )
							Code.AppendTail(	ce				,	""""	)													' 2文字目も「"」なら、２つの「""」すっとばして代わりに「"」を入れてループ続行。
						Else																									' 2連続でない「"」なら、次の「,」の次までの空白等をスキップ。//【改変/】2012年10月30日変更。旧： index++;//【改変/】2017年02月01日変更。次のカンマの次まで飛ばした。旧： index+=2;
							caret								=	InStr( caret, source, "," )
							Code.CountUp( caret ,1 )
							Exit Do
						End If
					Else
						Code.AppendTail(	ce					,	Mid(source,caret,1)	)
						Code.CountUp( caret ,1 )																				' 通常文字なのでループ続行。
					End If
				Loop
				Code.SetCe(	sh_xx	,cm	,rw						,	Trim(ce)	)												' 前後の空白はカット
				Code.CountUp( cm ,1 )
				ce												=	""
			Case Else:																											' ダブルクォートされていない文字列か、ダブルクォートの前のスペースだ。
				Code.AppendTail(	ce							,	Mid(source,caret,1)	)
				Code.CountUp( caret ,1 )
		End Select
	Loop
End Sub

'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------
'	1	2	3	4	5	6	7	8	9	0	1	2	3	4	5	6	7	8	9	0	1	2	3	4	5	6	7	8	9	0	1	2	3	4	5	6	7	8	9	0
'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------
																																' カンマや、ダブルクオーテーションを含む文字列を、ダブルクォーテーションで挟む。
																																
																																' この際、ダブルクォーテーション１つは ２つ に変換する。
Sub EscapeCsv(source As String) As String

	Dim isEscape												As	Boolean
		isEscape												=	false														' エスケープが必要なら真

	Dim str														As	String
	str															=	""

	Dim caret													As	Integer
	For caret = 1 To Len(source) ' 文字列は 1 スタート
		If _
			","= Mid( source, caret, 1 ) Or	_
			Chr$(10) = Mid( source, caret, 1 ) Or	_
			Chr$(13) = Mid( source, caret, 1 )		_
		Then																													' カンマが含まれていたので、エスケープが必要になった。(2017-02-09 追加 LF改行コード10、CR復帰コード13 に対応)
			isEscape											=	true
			Code.AppendTail(	str								,	Mid( source, caret, 1 )	)
		ElseIf """" = Mid( source, caret, 1 ) Then																				' ダブルクォーテーションが含まれていたので、エスケープが必要になった
			isEscape											=	true
			Code.AppendTail(	str								,	""""""	)													' ダブルクォーテーションを、１つの代わりに２つ追加
		Else
			Code.AppendTail(	str								,	Mid( source, caret, 1 )	)
		End If
	Next

	If isEscape Then
		str														=	"""" & str & """" ' ダブルクォーテーションで挟む
	End If

	EscapeCsv													=	str
End Sub

'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------
'	1	2	3	4	5	6	7	8	9	0	1	2	3	4	5	6	7	8	9	0	1	2	3	4	5	6	7	8	9	0	1	2	3	4	5	6	7	8	9	0
'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------
																																' シートを検索する。

																																' vl_expected	探して一致したい行値
																																' sh_target		探すシート
																																' cm_target		探す列
																																' rw_first		探し始める行
																																' rw_lastOver	最終行の次
Sub RowOf(	_
			 vl_expected	As String	_
			,sh_target		As Object	_
			,cm_target		As Integer	_
			,rw_first		As Integer	_
			,rw_lastOver	As Integer	_
		 ) As Integer	
	Dim rw														As Integer
	For rw = rw_first To rw_lastOver - 1
		If _
			vl_expected = Code.GetCe( sh_target _
				,cm_target	,rw	) _
		Then
			RowOf												= rw
			Exit Sub
		End If
	Next

	RowOf														= -1
End Sub

'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------
																																' シートを検索する。

																																' vl_expected	探して一致したい列値
																																' sh_target		探すシート
																																' rw_target		探す行
																																' cm_first		探し始める列
																																' cm_lastOver	最終列の次
Sub ColumnOf(	_
				 vl_expected	As String	_
				,sh_target		As Object	_
				,rw_target		As Integer	_
				,cm_first		As Integer	_
				,cm_lastOver	As Integer	_
			) As Integer	
	Dim cm														As	Integer														' 列
	For cm = cm_first To cm_lastOver - 1
		If _
			vl_expected = Code.GetCe( sh_target ,cm _
									,rw_target ) Then
			ColumnOf											=	cm
			Exit Sub
		End If
	Next

	ColumnOf													=	-1
End Sub


'---------------------------------------------------------------=---------------------------------------------------------------'--------------------------------
																																' シートを検索する。

																																' vl_foreignKey	探して一致したい値
																																' sh_target		探すシート
																																' cm_key		探す列
																																' cm_value		取得したい値が入っている列
Sub VLookup(	_
				 vl_foreignKey	As String	_
				,sh_target		As Object	_
				,cm_key			As Integer	_
				,cm_value		As Integer	_
		   ) As String
	Dim rw_foreignSheet											As	Integer
	rw_foreignSheet												=	0
	
	Do While "[EOF]" <> Code.GetCe(	sh_target	_
									,0	,rw_foreignSheet	)
		If _
			vl_foreignKey = Code.GetCe( sh_target _
				,cm_key	,rw_foreignSheet	)	_
		Then
			VLookup												=	Code.GetCe(	sh_target	,cm_value	,rw_foreignSheet	)
			Exit Sub
		End If
		Code.CountUp(	rw_foreignSheet							,	1	)
	Loop

	VLookup														= "#NotFound#"
End Sub
